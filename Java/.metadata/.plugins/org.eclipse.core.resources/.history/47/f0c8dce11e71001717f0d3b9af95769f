package ex7_Ch4;

import java.util.ArrayList;
import java.util.HashMap;

public class Graph<T extends Comparable<T>> {
	private HashMap<T,Node<T>> nodes;
	
	public Graph() {
		nodes = new HashMap<>();
	}
	
	public void addNode(T key,Node<T> n) {
		nodes.put(key,n);
	}
	
	
	public HashMap<T,Node<T>> getNodes() {
		return new HashMap<T,Node<T>>(nodes);
	}
	public ArrayList<T> getNoIncomming_Nodes() {
		Node<T> child ;
		ArrayList<T> children;
		ArrayList<T> noInc = new ArrayList<T>();
		for(T a : nodes.keySet()){
			 children = nodes.get(a).neigh;
			for(T c : children) {
		       child = nodes.get(c);
				if(child.getInbound() == 0)
					noInc.add(c);
			}
		}
		return noInc;
	}
}
