import java.util.Scanner;
import java.util.HashMap;
import java.util.ArrayList;

public class Solution {
	public String longestSub(ArrayList<String> sub, String word){
		HashMap<Character,ArrayList<Integer>> positions = new HashMap<>();
		ArrayList<Integer> newArr = null;
		for(int i = 0; i < word.length(); i++){
			if(positions.containsKey(word.charAt(i))){
				newArr = positions.get(word.charAt(i));
				newArr.add(i);
				positions.put(word.charAt(i), newArr);
				
			}
			else{
				newArr = new ArrayList<>();
				newArr.add(i);
				positions.put(word.charAt(i), newArr);
			}
		}
		int j, prev, now;
		String max = "";
		for(String s : sub){
			prev = -1;
			for(j = 0; j < s.length(); j++){
				if(positions.containsKey(s.charAt(j))){
					now = containsBigger(positions.get(s.charAt(j)), prev);
					if(now != -1){
						prev = now;
						System.out.println(prev);
					}
					else{
						System.out.println("test");
						break;
					}
				}
			}
			if(s.length() > max.length() && j >=s.length())
				max = s;
		}
		return max;
	}
	
	public int containsBigger(ArrayList<Integer> a, int val){
		// array must be sorted so we use binary search
	int k = 0;
	int n = a.size();
	for(int b = n/2; b >=0; b/=2){
		while(k <= n && a.get(k + b) <= val) k += b;
	}
	if(k < n)
		return k;
	else
		return -1;
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner in  = new Scanner(System.in);
		String word = in.nextLine();
		int n = in.nextInt();
		System.out.println(n);
		// go next line to read a string
		in.nextLine();
		String current;
		ArrayList<String> sub = new ArrayList<String>();
		for(int i = 0; i < n; i++){
			current = in.nextLine();
			sub.add(current);
			//System.out.println(current);
		}
		Solution sol = new Solution();
		System.out.println(sol.longestSub(sub, word));
	}

}
