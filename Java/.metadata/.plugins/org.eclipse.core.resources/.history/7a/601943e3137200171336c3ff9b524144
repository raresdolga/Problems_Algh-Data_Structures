package ex8_Ch4;

public class Common_Ancestor {
	private Node root ;
	
	public Common_Ancestor(int val) {	
		root = new Node(val,null,null); 
	}
	
	public void insert( int val, int branch){
		Node t = new Node(val,null,null);
		//Node current = new Node(root);
		Node current = root;
		while(current.getLeft() != null && current.getRight() != null) {
			if(branch == 0)
				current = current.getLeft();
			else
				current = current.getRight();
			branch = (int) ((branch + Math.random()*1)%2);
		}
		if(branch%2 == 0 && current.getLeft() == null)
			current.setLeft(t);
		else
			current.setRight(t);
	}
	
	public void preOrder(Node t){
		if(t != null) {
			System.out.println(t.getVal());
			preOrder(t.getLeft());
			preOrder(t.getRight());
		}
	}
	
	public static void main(String [] args) {
		Common_Ancestor obj = new Common_Ancestor(5);
		obj.insert(7, 0);
		obj.insert(90, 0);
		obj.insert(45,1);
		obj.preOrder(obj.root);
		System.out.println(obj.root.getVal());
	}
}
