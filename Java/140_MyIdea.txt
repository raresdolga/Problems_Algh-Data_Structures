class Solution {
    public List<String> wordBreak(String s, List<String> wordDict) {
        HashMap<String,Integer> map = new HashMap<>();
        for(String i : wordDict){
            map.put(i,1);
        }
        int j;
        StringBuilder temp = new StringBuilder();
        List<String> result = new ArrayList<>();
        List<String> finalL = new ArrayList<>();
        List<String> partial = new ArrayList<>();
        if(s.equals(" ")) return finalL;
        for(int i = 0; i < s.length(); i++){
            temp.append(s.charAt(i));
            if(map.containsKey(temp.toString())){
                result.add(temp.toString());
                partial = wordBreak(s.substring(i+1,s.length()),wordDict);
                if(partial.size() == 0 && i == s.length() - 1)
                    return result;
                    if(partial.size() != 0){
                            for(j = 0; j < partial.size() - 1; j++){
                                finalL.add(result.get(result.size() - 1) + " " + partial.get(j) + " ");
                              System.out.print( partial.get(j) + " " + j);
                            }
                        System.out.println( partial.get(j) + " " +j);
                         finalL.add(result.get(result.size() - 1) + " " + partial.get(j));
                    }
            }
        }
        
      return finalL;
    }
                                    
}